# docker-composeではなく、docker compose で実行する場合はversionはobsolete
# docker-compose upの前に、eval "$(ssh-agent -s)"  と ssh-add ~/path/custom_key ssh-add -l を忘れない
services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      ssh:
        - default
    ports:
      - '80:80'
      - "443:443"
    depends_on:
      - backend
      - auth
      - grafana
      - prometheus
    volumes:
      - /etc/ssl/raspberrypi/raspberrypi.crt:/etc/ssl/raspberrypi/raspberrypi.crt:ro
      - /etc/ssl/raspberrypi/raspberrypi.key:/etc/ssl/raspberrypi/raspberrypi.key:ro
      - playwright-reports:/usr/share/nginx/html:ro
    networks:
      webnet:
        ipv4_address: 172.25.0.10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      ssh:
        - default
    ports:
      - '8080:8080'
    networks:
      - webnet
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    extra_hosts:
      - "raspberrypi.local:172.25.0.10"  # nginx の固定IPを指定
    depends_on:
      - db
      - auth
  
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
      ssh:
        - default
    ports:
      - '9000:9000'
    networks:
      - webnet
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - db

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    ports: 
      - 3306:3306
    volumes: 
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      EXPORTER_PASSWORD: ${EXPORTER_PASSWORD}
      MYSQL_AUTH_PASSWORD: ${MYSQL_AUTH_PASSWORD}
    networks:
      - webnet

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    command:
      - '--web.route-prefix=/prometheus/'
      - '--web.external-url=https://raspberrypi.local/prometheus/'
    ports:
      - "9090:9090"
    volumes:
      #/var/lib/prometheus の方が統一感ある
      - prometheus-data:/prometheus 
    networks:
      - webnet
    depends_on:
      - backend
      - node_exporter
      - mysqld_exporter

  node_exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - webnet

  # DATA_SOURCE_NAME環境変数は0.15.0以降ではサポートされていない
  # .my.cnfはdockerイメージに含まれると第三者にパスワードが漏れるので使いたくない
  mysqld_exporter:
    image: prom/mysqld-exporter:latest
    ports:
      - "9104:9104"
    environment:
      MYSQLD_EXPORTER_PASSWORD: ${EXPORTER_PASSWORD}
    command:
      - '--mysqld.address=db:3306'
      - '--mysqld.username=exporter'
    depends_on:
      - db
    networks:
      - webnet

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - '9113:9113'
    command:
      - '-nginx.scrape-uri=http://nginx/stub_status'
    depends_on:
      - nginx
    networks:
      - webnet

  # /var/run/docker.sockは、ホスト上のDockerデーモンがクライアントと通信するためのUnixソケットファイル
  # ビルドコンテキストの外のファイルをCOPY命令することはできないのでvolumesをDockerfileに移すことはできない
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - '8081:8080'
    volumes:
      - '/:/rootfs:ro'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    networks:
      - webnet

  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    networks:
      - webnet
    depends_on:
      - prometheus

  e2e:
    build:
      context: ./e2e
      dockerfile: Dockerfile
    networks:
      - webnet
    depends_on:
      - nginx
      - db
      - backend
      - auth
    volumes:
      - playwright-reports:/reports

networks:
  webnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24

volumes:
  mysql-data:
  prometheus-data:
  grafana-data:
  playwright-reports: