worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # HTTP サーバーブロック: ポート 80
    server {
        listen 80;
        server_name raspberrypi.local;

        # /stub_status は HTTP で許可
        location /stub_status {
            stub_status;
            allow all;
        }

        # その他の HTTP リクエストは HTTPS にリダイレクト
        location / {
            return 301 https://$host$request_uri;
        }
        
    }

    # HTTPS サーバーブロック: ポート 443
    server {
        listen 443 ssl;
        server_name raspberrypi.local; # localhost -> raspberrypi.localに変更する

        root /var/www/html/portal;
        index index.html index.htm;

        # SSL 設定
        ssl_certificate     /etc/ssl/raspberrypi/raspberrypi.crt;
        ssl_certificate_key /etc/ssl/raspberrypi/raspberrypi.key;

        # SSL の強化設定（推奨）
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location /ococa/ {
            alias /var/www/html/ococa/;
            try_files $uri $uri/ /ococa/index.html;
        }

        # API リクエストをバックエンドサーバーにプロキシ
        location /api/ {
            proxy_pass http://backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Authorizationヘッダーを転送
            proxy_set_header Authorization $http_authorization;

            # その他の必要なヘッダーを転送
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # /login パスを認可サーバーにプロキシ
        location /login {
            proxy_pass http://auth:9000/login;  # 認可サーバーのログインエンドポイントに変更
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /oauth2/ {
            proxy_pass http://auth:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            # 認可コードフロー等でSSLのコンテキストを正しく認識させるためのヘッダー
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /.well-known/ {
            proxy_pass http://auth:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # OpenID Connectの/userinfo パスを認可サーバーにプロキシ
        location /userinfo {
            proxy_pass http://auth:9000/userinfo;  # 認可サーバーのログインエンドポイントに変更
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /prometheus {
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # nginx_exporterによるメトリクス取得用
        location /stub_status {
            stub_status;
            allow all;
        }

        location /e2e/reports/ {
            alias /usr/share/nginx/html/playwright-report/;
            autoindex on;  # ディレクトリ一覧を表示する場合
            index index.html index.htm;
        }
    }
}
